#!/bin/awk -f

# Run as such:
# indent_level=2 wilt -vverbose=f -vindent=2 -vfile=t /tmp/path/to/your/file

function info (s) {
  if (verbose == "true" || verbose == "t")
    print s
}

function min(a, b) {
  return a > b ? a : b
}

BEGIN {
  if (help || ARGC < 2) {
    print "Usage: wilt [OPTION...] FILE"
    print
    print "Main usage arguments: "
    print
    print "  -vhelp=t          Show this help."
    print "  -vverbose=t       Run in verbose mode."
    print "  -vindent=N        Set indentation level to N (supersedes ENV setting)."
    print "  -vfile=t          Print the file name in the resultant output."
    print "  -vsmart=t         Attempt to apply some non-WILT 'smart' adjustments for things beyond some standard deviations."
    print
    print "Environment variables: "
    print
    print "  INDENT_LEVEL=N    Set the indentation level to N (superdeded by flag; default=2)."
    print
    print "License: AGPLv3 or later."
    print
    print "Report bugs to Matthew Carter <m@ahungry.com> "
    exit 0
  }
  _k="indent_level"
  FS="[^ ^\t]"
  indent_level=indent ?
    indent :
    ENVIRON[_k] ?
    ENVIRON[_k] :
    2

  info("indent level: " indent_level)
  # We should track prev len and a standard deviation incase some file does some insane indent level
  prev_len=0
}
# Just always run this on each line, not just matches.
{
  len = length($1)
  info("len: " len)

  if (len > 0) {
    i += 1
    # By default, bump it up by the indentation level
    inc=len/indent_level
    if (smart == "t") {
      # But, if it is way too big, just a smaller amount will do (sometimes indentations can be very wide)
      # This ensures that if it goes beyond some deviation, we cap it at one inc from the last decent indent.
      if (inc >= prev_len + indent_level) {
        inc=prev_len + indent_level
      } else {
        prev_len=len
      }
    }
    sum += inc
  }
}
END {
  if (i > 0) {
    wilt=sum/i
    if (file == "t") {
      print wilt, ARGV[1]
    } else {
      print wilt
    }
  }
  info("fin")
}
